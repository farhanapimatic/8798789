# -*- coding: utf-8 -*-

"""
    awsecommerceservice.models.cart

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""
import awsecommerceservice.models.request_162
import awsecommerceservice.models.price
import awsecommerceservice.models.cart_items
import awsecommerceservice.models.saved_for_later_items
import awsecommerceservice.models.similar_products
import awsecommerceservice.models.top_sellers
import awsecommerceservice.models.new_releases
import awsecommerceservice.models.similar_viewed_products
import awsecommerceservice.models.other_categories_similar_products

class Cart(object):

    """Implementation of the 'Cart' model.

    TODO: type model description here.

    Attributes:
        cart_id (string): TODO: type description here.
        hmac (string): TODO: type description here.
        url_encoded_hmac (string): TODO: type description here.
        request (Request162): TODO: type description here.
        purchase_url (string): TODO: type description here.
        mobile_cart_url (string): TODO: type description here.
        sub_total (Price): TODO: type description here.
        cart_items (CartItems): TODO: type description here.
        saved_for_later_items (SavedForLaterItems): TODO: type description
            here.
        similar_products (SimilarProducts): TODO: type description here.
        top_sellers (TopSellers): TODO: type description here.
        new_releases (NewReleases): TODO: type description here.
        similar_viewed_products (SimilarViewedProducts): TODO: type
            description here.
        other_categories_similar_products (OtherCategoriesSimilarProducts):
            TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cart_id" : "CartId",
        "hmac" : "HMAC",
        "url_encoded_hmac" : "URLEncodedHMAC",
        "request" : "Request",
        "purchase_url" : "PurchaseURL",
        "mobile_cart_url" : "MobileCartURL",
        "sub_total" : "SubTotal",
        "cart_items" : "CartItems",
        "saved_for_later_items" : "SavedForLaterItems",
        "similar_products" : "SimilarProducts",
        "top_sellers" : "TopSellers",
        "new_releases" : "NewReleases",
        "similar_viewed_products" : "SimilarViewedProducts",
        "other_categories_similar_products" : "OtherCategoriesSimilarProducts"
    }

    def __init__(self,
                 cart_id=None,
                 hmac=None,
                 url_encoded_hmac=None,
                 request=None,
                 purchase_url=None,
                 mobile_cart_url=None,
                 sub_total=None,
                 cart_items=None,
                 saved_for_later_items=None,
                 similar_products=None,
                 top_sellers=None,
                 new_releases=None,
                 similar_viewed_products=None,
                 other_categories_similar_products=None):
        """Constructor for the Cart class"""

        # Initialize members of the class
        self.cart_id = cart_id
        self.hmac = hmac
        self.url_encoded_hmac = url_encoded_hmac
        self.request = request
        self.purchase_url = purchase_url
        self.mobile_cart_url = mobile_cart_url
        self.sub_total = sub_total
        self.cart_items = cart_items
        self.saved_for_later_items = saved_for_later_items
        self.similar_products = similar_products
        self.top_sellers = top_sellers
        self.new_releases = new_releases
        self.similar_viewed_products = similar_viewed_products
        self.other_categories_similar_products = other_categories_similar_products


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        cart_id = dictionary.get("CartId")
        hmac = dictionary.get("HMAC")
        url_encoded_hmac = dictionary.get("URLEncodedHMAC")
        request = awsecommerceservice.models.request_162.Request162.from_dictionary(dictionary.get("Request")) if dictionary.get("Request") else None
        purchase_url = dictionary.get("PurchaseURL")
        mobile_cart_url = dictionary.get("MobileCartURL")
        sub_total = awsecommerceservice.models.price.Price.from_dictionary(dictionary.get("SubTotal")) if dictionary.get("SubTotal") else None
        cart_items = awsecommerceservice.models.cart_items.CartItems.from_dictionary(dictionary.get("CartItems")) if dictionary.get("CartItems") else None
        saved_for_later_items = awsecommerceservice.models.saved_for_later_items.SavedForLaterItems.from_dictionary(dictionary.get("SavedForLaterItems")) if dictionary.get("SavedForLaterItems") else None
        similar_products = awsecommerceservice.models.similar_products.SimilarProducts.from_dictionary(dictionary.get("SimilarProducts")) if dictionary.get("SimilarProducts") else None
        top_sellers = awsecommerceservice.models.top_sellers.TopSellers.from_dictionary(dictionary.get("TopSellers")) if dictionary.get("TopSellers") else None
        new_releases = awsecommerceservice.models.new_releases.NewReleases.from_dictionary(dictionary.get("NewReleases")) if dictionary.get("NewReleases") else None
        similar_viewed_products = awsecommerceservice.models.similar_viewed_products.SimilarViewedProducts.from_dictionary(dictionary.get("SimilarViewedProducts")) if dictionary.get("SimilarViewedProducts") else None
        other_categories_similar_products = awsecommerceservice.models.other_categories_similar_products.OtherCategoriesSimilarProducts.from_dictionary(dictionary.get("OtherCategoriesSimilarProducts")) if dictionary.get("OtherCategoriesSimilarProducts") else None

        # Return an object of this model
        return cls(cart_id,
                   hmac,
                   url_encoded_hmac,
                   request,
                   purchase_url,
                   mobile_cart_url,
                   sub_total,
                   cart_items,
                   saved_for_later_items,
                   similar_products,
                   top_sellers,
                   new_releases,
                   similar_viewed_products,
                   other_categories_similar_products)


