# -*- coding: utf-8 -*-

"""
   awsecommerceservice.configuration

   This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""
from .api_helper import APIHelper

class Configuration(object):

    """A class used for configuring the SDK by a user.

    This class need not be instantiated and all properties and methods
    are accessible without instance creation.

    """

    # Set the array parameter serialization method
    # (allowed: indexed, unindexed, plain, csv, tsv, psv)
    array_serialization = "indexed"

    # An enum for SDK environments
    class Environment(object):
        PRODUCTION = 0

    # An enum for API servers
    class Server(object):
        AWSECOMMERCESERVICEPORT = 0
        AWSECOMMERCESERVICEPORTCA = 1
        AWSECOMMERCESERVICEPORTCN = 2
        AWSECOMMERCESERVICEPORTDE = 3
        AWSECOMMERCESERVICEPORTES = 4
        AWSECOMMERCESERVICEPORTFR = 5
        AWSECOMMERCESERVICEPORTIN = 6
        AWSECOMMERCESERVICEPORTIT = 7
        AWSECOMMERCESERVICEPORTJP = 8
        AWSECOMMERCESERVICEPORTUK = 9
        AWSECOMMERCESERVICEPORTUS = 10

    # The environment in which the SDK is running
    environment = Environment.PRODUCTION

    # All the environments the SDK can run in
    environments = {
        Environment.PRODUCTION: {
            Server.AWSECOMMERCESERVICEPORT: 'https://webservices.amazon.com/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTCA: 'https://webservices.amazon.ca/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTCN: 'https://webservices.amazon.cn/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTDE: 'https://webservices.amazon.de/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTES: 'https://webservices.amazon.es/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTFR: 'https://webservices.amazon.fr/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTIN: 'https://webservices.amazon.in/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTIT: 'https://webservices.amazon.it/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTJP: 'https://webservices.amazon.co.jp/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTUK: 'https://webservices.amazon.co.uk/onca/soap?Service=AWSECommerceService',
            Server.AWSECOMMERCESERVICEPORTUS: 'https://webservices.amazon.com/onca/soap?Service=AWSECommerceService',
        },
    }

    @classmethod
    def get_base_uri(cls, server=Server.AWSECOMMERCESERVICEPORT):
        """Generates the appropriate base URI for the environment and the server.

        Args:
            server (Configuration.Server): The server enum for which the base URI is required.

        Returns:
            String: The base URI.

        """
        parameters = {
        }
        return APIHelper.append_url_with_template_parameters(cls.environments[cls.environment][server], parameters)
