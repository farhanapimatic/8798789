/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Items254
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('Items254', ['BaseModel', Items254Model]);

    function Items254Model(BaseModel) {
        var Items254 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.request = this.getValue(obj.request);
            this.correctedQuery = this.getValue(obj.correctedQuery);
            this.qid = this.getValue(obj.qid);
            this.engineQuery = this.getValue(obj.engineQuery);
            this.totalResults = this.getValue(obj.totalResults);
            this.totalPages = this.getValue(obj.totalPages);
            this.moreSearchResultsUrl = this.getValue(obj.moreSearchResultsUrl);
            this.searchResultsMap = this.getValue(obj.searchResultsMap);
            this.item = this.getValue(obj.item);
            this.searchBinSets = this.getValue(obj.searchBinSets);
        };

        Items254.prototype = new BaseModel();
        Items254.prototype.constructor = Items254;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Items254.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'request', realName: 'Request', type: 'Request162' },
                { name: 'correctedQuery', realName: 'CorrectedQuery', type: 'CorrectedQuery' },
                { name: 'qid', realName: 'Qid' },
                { name: 'engineQuery', realName: 'EngineQuery' },
                { name: 'totalResults', realName: 'TotalResults' },
                { name: 'totalPages', realName: 'TotalPages' },
                { name: 'moreSearchResultsUrl', realName: 'MoreSearchResultsUrl' },
                { name: 'searchResultsMap', realName: 'SearchResultsMap', type: 'SearchResultsMap' },
                { name: 'item', realName: 'Item', array: true, type: 'Item253' },
                { name: 'searchBinSets', realName: 'SearchBinSets', type: 'SearchBinSets' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Items254.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Request162|null}
         */
        Items254.prototype.getRequest = function () {
            return this.request;
        };
    
        /**
         * Setter for Request
         * 
         * @param {Request162|null} value 
         */
        Items254.prototype.setRequest = function (value) {
            this.request = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CorrectedQuery|null}
         */
        Items254.prototype.getCorrectedQuery = function () {
            return this.correctedQuery;
        };
    
        /**
         * Setter for CorrectedQuery
         * 
         * @param {CorrectedQuery|null} value 
         */
        Items254.prototype.setCorrectedQuery = function (value) {
            this.correctedQuery = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        Items254.prototype.getQid = function () {
            return this.qid;
        };
    
        /**
         * Setter for Qid
         * 
         * @param {string|null} value 
         */
        Items254.prototype.setQid = function (value) {
            this.qid = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        Items254.prototype.getEngineQuery = function () {
            return this.engineQuery;
        };
    
        /**
         * Setter for EngineQuery
         * 
         * @param {string|null} value 
         */
        Items254.prototype.setEngineQuery = function (value) {
            this.engineQuery = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        Items254.prototype.getTotalResults = function () {
            return this.totalResults;
        };
    
        /**
         * Setter for TotalResults
         * 
         * @param {int|null} value 
         */
        Items254.prototype.setTotalResults = function (value) {
            this.totalResults = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        Items254.prototype.getTotalPages = function () {
            return this.totalPages;
        };
    
        /**
         * Setter for TotalPages
         * 
         * @param {int|null} value 
         */
        Items254.prototype.setTotalPages = function (value) {
            this.totalPages = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        Items254.prototype.getMoreSearchResultsUrl = function () {
            return this.moreSearchResultsUrl;
        };
    
        /**
         * Setter for MoreSearchResultsUrl
         * 
         * @param {string|null} value 
         */
        Items254.prototype.setMoreSearchResultsUrl = function (value) {
            this.moreSearchResultsUrl = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {SearchResultsMap|null}
         */
        Items254.prototype.getSearchResultsMap = function () {
            return this.searchResultsMap;
        };
    
        /**
         * Setter for SearchResultsMap
         * 
         * @param {SearchResultsMap|null} value 
         */
        Items254.prototype.setSearchResultsMap = function (value) {
            this.searchResultsMap = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        Items254.prototype.getItem = function () {
            return this.item;
        };
    
        /**
         * Setter for Item
         * 
         * @param {array|null} value 
         */
        Items254.prototype.setItem = function (value) {
            this.item = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {SearchBinSets|null}
         */
        Items254.prototype.getSearchBinSets = function () {
            return this.searchBinSets;
        };
    
        /**
         * Setter for SearchBinSets
         * 
         * @param {SearchBinSets|null} value 
         */
        Items254.prototype.setSearchBinSets = function (value) {
            this.searchBinSets = value;
        };
    
        return Items254;
    }

}(angular));
