/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Request162
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('Request162', ['BaseModel', Request162Model]);

    function Request162Model(BaseModel) {
        var Request162 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.isValid = this.getValue(obj.isValid);
            this.browseNodeLookupRequest = this.getValue(obj.browseNodeLookupRequest);
            this.itemSearchRequest = this.getValue(obj.itemSearchRequest);
            this.itemLookupRequest = this.getValue(obj.itemLookupRequest);
            this.similarityLookupRequest = this.getValue(obj.similarityLookupRequest);
            this.cartGetRequest = this.getValue(obj.cartGetRequest);
            this.cartAddRequest = this.getValue(obj.cartAddRequest);
            this.cartCreateRequest = this.getValue(obj.cartCreateRequest);
            this.cartModifyRequest = this.getValue(obj.cartModifyRequest);
            this.cartClearRequest = this.getValue(obj.cartClearRequest);
            this.errors = this.getValue(obj.errors);
        };

        Request162.prototype = new BaseModel();
        Request162.prototype.constructor = Request162;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Request162.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'isValid', realName: 'IsValid' },
                {
                    name: 'browseNodeLookupRequest',
                    realName: 'BrowseNodeLookupRequest',
                    type: 'BrowseNodeLookupRequest',
                },
                { name: 'itemSearchRequest', realName: 'ItemSearchRequest', type: 'ItemSearchRequest' },
                { name: 'itemLookupRequest', realName: 'ItemLookupRequest', type: 'ItemLookupRequest' },
                {
                    name: 'similarityLookupRequest',
                    realName: 'SimilarityLookupRequest',
                    type: 'SimilarityLookupRequest',
                },
                { name: 'cartGetRequest', realName: 'CartGetRequest', type: 'CartGetRequest' },
                { name: 'cartAddRequest', realName: 'CartAddRequest', type: 'CartAddRequest' },
                { name: 'cartCreateRequest', realName: 'CartCreateRequest', type: 'CartCreateRequest' },
                { name: 'cartModifyRequest', realName: 'CartModifyRequest', type: 'CartModifyRequest' },
                { name: 'cartClearRequest', realName: 'CartClearRequest', type: 'CartClearRequest' },
                { name: 'errors', realName: 'Errors', type: 'Errors' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Request162.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        Request162.prototype.getIsValid = function () {
            return this.isValid;
        };
    
        /**
         * Setter for IsValid
         * 
         * @param {string|null} value 
         */
        Request162.prototype.setIsValid = function (value) {
            this.isValid = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {BrowseNodeLookupRequest|null}
         */
        Request162.prototype.getBrowseNodeLookupRequest = function () {
            return this.browseNodeLookupRequest;
        };
    
        /**
         * Setter for BrowseNodeLookupRequest
         * 
         * @param {BrowseNodeLookupRequest|null} value 
         */
        Request162.prototype.setBrowseNodeLookupRequest = function (value) {
            this.browseNodeLookupRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {ItemSearchRequest|null}
         */
        Request162.prototype.getItemSearchRequest = function () {
            return this.itemSearchRequest;
        };
    
        /**
         * Setter for ItemSearchRequest
         * 
         * @param {ItemSearchRequest|null} value 
         */
        Request162.prototype.setItemSearchRequest = function (value) {
            this.itemSearchRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {ItemLookupRequest|null}
         */
        Request162.prototype.getItemLookupRequest = function () {
            return this.itemLookupRequest;
        };
    
        /**
         * Setter for ItemLookupRequest
         * 
         * @param {ItemLookupRequest|null} value 
         */
        Request162.prototype.setItemLookupRequest = function (value) {
            this.itemLookupRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {SimilarityLookupRequest|null}
         */
        Request162.prototype.getSimilarityLookupRequest = function () {
            return this.similarityLookupRequest;
        };
    
        /**
         * Setter for SimilarityLookupRequest
         * 
         * @param {SimilarityLookupRequest|null} value 
         */
        Request162.prototype.setSimilarityLookupRequest = function (value) {
            this.similarityLookupRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CartGetRequest|null}
         */
        Request162.prototype.getCartGetRequest = function () {
            return this.cartGetRequest;
        };
    
        /**
         * Setter for CartGetRequest
         * 
         * @param {CartGetRequest|null} value 
         */
        Request162.prototype.setCartGetRequest = function (value) {
            this.cartGetRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CartAddRequest|null}
         */
        Request162.prototype.getCartAddRequest = function () {
            return this.cartAddRequest;
        };
    
        /**
         * Setter for CartAddRequest
         * 
         * @param {CartAddRequest|null} value 
         */
        Request162.prototype.setCartAddRequest = function (value) {
            this.cartAddRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CartCreateRequest|null}
         */
        Request162.prototype.getCartCreateRequest = function () {
            return this.cartCreateRequest;
        };
    
        /**
         * Setter for CartCreateRequest
         * 
         * @param {CartCreateRequest|null} value 
         */
        Request162.prototype.setCartCreateRequest = function (value) {
            this.cartCreateRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CartModifyRequest|null}
         */
        Request162.prototype.getCartModifyRequest = function () {
            return this.cartModifyRequest;
        };
    
        /**
         * Setter for CartModifyRequest
         * 
         * @param {CartModifyRequest|null} value 
         */
        Request162.prototype.setCartModifyRequest = function (value) {
            this.cartModifyRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CartClearRequest|null}
         */
        Request162.prototype.getCartClearRequest = function () {
            return this.cartClearRequest;
        };
    
        /**
         * Setter for CartClearRequest
         * 
         * @param {CartClearRequest|null} value 
         */
        Request162.prototype.setCartClearRequest = function (value) {
            this.cartClearRequest = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Errors|null}
         */
        Request162.prototype.getErrors = function () {
            return this.errors;
        };
    
        /**
         * Setter for Errors
         * 
         * @param {Errors|null} value 
         */
        Request162.prototype.setErrors = function (value) {
            this.errors = value;
        };
    
        return Request162;
    }

}(angular));
