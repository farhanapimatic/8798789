/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Variations267
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('Variations267', ['BaseModel', Variations267Model]);

    function Variations267Model(BaseModel) {
        var Variations267 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.totalVariations = this.getValue(obj.totalVariations);
            this.totalVariationPages = this.getValue(obj.totalVariationPages);
            this.variationDimensions = this.getValue(obj.variationDimensions);
            this.item = this.getValue(obj.item);
        };

        Variations267.prototype = new BaseModel();
        Variations267.prototype.constructor = Variations267;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Variations267.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'totalVariations', realName: 'TotalVariations' },
                { name: 'totalVariationPages', realName: 'TotalVariationPages' },
                { name: 'variationDimensions', realName: 'VariationDimensions', type: 'VariationDimensions' },
                { name: 'item', realName: 'Item', array: true, type: 'Item253' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Variations267.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        Variations267.prototype.getTotalVariations = function () {
            return this.totalVariations;
        };
    
        /**
         * Setter for TotalVariations
         * 
         * @param {int|null} value 
         */
        Variations267.prototype.setTotalVariations = function (value) {
            this.totalVariations = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        Variations267.prototype.getTotalVariationPages = function () {
            return this.totalVariationPages;
        };
    
        /**
         * Setter for TotalVariationPages
         * 
         * @param {int|null} value 
         */
        Variations267.prototype.setTotalVariationPages = function (value) {
            this.totalVariationPages = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {VariationDimensions|null}
         */
        Variations267.prototype.getVariationDimensions = function () {
            return this.variationDimensions;
        };
    
        /**
         * Setter for VariationDimensions
         * 
         * @param {VariationDimensions|null} value 
         */
        Variations267.prototype.setVariationDimensions = function (value) {
            this.variationDimensions = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        Variations267.prototype.getItem = function () {
            return this.item;
        };
    
        /**
         * Setter for Item
         * 
         * @param {array|null} value 
         */
        Variations267.prototype.setItem = function (value) {
            this.item = value;
        };
    
        return Variations267;
    }

}(angular));
