/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of RelatedItems265
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('RelatedItems265', ['BaseModel', RelatedItems265Model]);

    function RelatedItems265Model(BaseModel) {
        var RelatedItems265 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.relationship = this.getValue(obj.relationship);
            this.relationshipType = this.getValue(obj.relationshipType);
            this.relatedItemCount = this.getValue(obj.relatedItemCount);
            this.relatedItemPageCount = this.getValue(obj.relatedItemPageCount);
            this.relatedItemPage = this.getValue(obj.relatedItemPage);
            this.relatedItem = this.getValue(obj.relatedItem);
        };

        RelatedItems265.prototype = new BaseModel();
        RelatedItems265.prototype.constructor = RelatedItems265;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        RelatedItems265.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'relationship', realName: 'Relationship' },
                { name: 'relationshipType', realName: 'RelationshipType' },
                { name: 'relatedItemCount', realName: 'RelatedItemCount' },
                { name: 'relatedItemPageCount', realName: 'RelatedItemPageCount' },
                { name: 'relatedItemPage', realName: 'RelatedItemPage' },
                { name: 'relatedItem', realName: 'RelatedItem', array: true, type: 'RelatedItem264' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        RelatedItems265.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {RelationshipEnum|null}
         */
        RelatedItems265.prototype.getRelationship = function () {
            return this.relationship;
        };
    
        /**
         * Setter for Relationship
         * 
         * @param {RelationshipEnum|null} value 
         */
        RelatedItems265.prototype.setRelationship = function (value) {
            this.relationship = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        RelatedItems265.prototype.getRelationshipType = function () {
            return this.relationshipType;
        };
    
        /**
         * Setter for RelationshipType
         * 
         * @param {string|null} value 
         */
        RelatedItems265.prototype.setRelationshipType = function (value) {
            this.relationshipType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        RelatedItems265.prototype.getRelatedItemCount = function () {
            return this.relatedItemCount;
        };
    
        /**
         * Setter for RelatedItemCount
         * 
         * @param {int|null} value 
         */
        RelatedItems265.prototype.setRelatedItemCount = function (value) {
            this.relatedItemCount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        RelatedItems265.prototype.getRelatedItemPageCount = function () {
            return this.relatedItemPageCount;
        };
    
        /**
         * Setter for RelatedItemPageCount
         * 
         * @param {int|null} value 
         */
        RelatedItems265.prototype.setRelatedItemPageCount = function (value) {
            this.relatedItemPageCount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        RelatedItems265.prototype.getRelatedItemPage = function () {
            return this.relatedItemPage;
        };
    
        /**
         * Setter for RelatedItemPage
         * 
         * @param {int|null} value 
         */
        RelatedItems265.prototype.setRelatedItemPage = function (value) {
            this.relatedItemPage = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        RelatedItems265.prototype.getRelatedItem = function () {
            return this.relatedItem;
        };
    
        /**
         * Setter for RelatedItem
         * 
         * @param {array|null} value 
         */
        RelatedItems265.prototype.setRelatedItem = function (value) {
            this.relatedItem = value;
        };
    
        return RelatedItems265;
    }

}(angular));
