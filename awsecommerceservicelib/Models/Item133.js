/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Item133
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('Item133', ['BaseModel', Item133Model]);

    function Item133Model(BaseModel) {
        var Item133 = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.aSIN = this.getValue(obj.aSIN);
            this.parentASIN = this.getValue(obj.parentASIN);
            this.errors = this.getValue(obj.errors);
            this.detailPageURL = this.getValue(obj.detailPageURL);
            this.itemLinks = this.getValue(obj.itemLinks);
            this.salesRank = this.getValue(obj.salesRank);
            this.smallImage = this.getValue(obj.smallImage);
            this.mediumImage = this.getValue(obj.mediumImage);
            this.largeImage = this.getValue(obj.largeImage);
            this.imageSets = this.getValue(obj.imageSets);
            this.itemAttributes = this.getValue(obj.itemAttributes);
            this.variationAttributes = this.getValue(obj.variationAttributes);
            this.relatedItems = this.getValue(obj.relatedItems);
            this.collections = this.getValue(obj.collections);
            this.subjects = this.getValue(obj.subjects);
            this.offerSummary = this.getValue(obj.offerSummary);
            this.offers = this.getValue(obj.offers);
            this.rentalOffers = this.getValue(obj.rentalOffers);
            this.variationSummary = this.getValue(obj.variationSummary);
            this.variations = this.getValue(obj.variations);
            this.customerReviews = this.getValue(obj.customerReviews);
            this.editorialReviews = this.getValue(obj.editorialReviews);
            this.similarProducts = this.getValue(obj.similarProducts);
            this.accessories = this.getValue(obj.accessories);
            this.tracks = this.getValue(obj.tracks);
            this.browseNodes = this.getValue(obj.browseNodes);
            this.alternateVersions = this.getValue(obj.alternateVersions);
        };

        Item133.prototype = new BaseModel();
        Item133.prototype.constructor = Item133;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Item133.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'aSIN', realName: 'ASIN' },
                { name: 'parentASIN', realName: 'ParentASIN' },
                { name: 'errors', realName: 'Errors', type: 'Errors' },
                { name: 'detailPageURL', realName: 'DetailPageURL' },
                { name: 'itemLinks', realName: 'ItemLinks', type: 'ItemLinks' },
                { name: 'salesRank', realName: 'SalesRank' },
                { name: 'smallImage', realName: 'SmallImage', type: 'Image' },
                { name: 'mediumImage', realName: 'MediumImage', type: 'Image' },
                { name: 'largeImage', realName: 'LargeImage', type: 'Image' },
                { name: 'imageSets', realName: 'ImageSets', array: true, type: 'ImageSets' },
                { name: 'itemAttributes', realName: 'ItemAttributes', type: 'ItemAttributes' },
                { name: 'variationAttributes', realName: 'VariationAttributes', type: 'VariationAttributes' },
                { name: 'relatedItems', realName: 'RelatedItems', array: true, type: 'RelatedItems' },
                { name: 'collections', realName: 'Collections', type: 'Collections' },
                { name: 'subjects', realName: 'Subjects', type: 'Subjects' },
                { name: 'offerSummary', realName: 'OfferSummary', type: 'OfferSummary' },
                { name: 'offers', realName: 'Offers', type: 'Offers' },
                { name: 'rentalOffers', realName: 'RentalOffers', type: 'RentalOffers' },
                { name: 'variationSummary', realName: 'VariationSummary', type: 'VariationSummary' },
                { name: 'variations', realName: 'Variations', type: 'Variations' },
                { name: 'customerReviews', realName: 'CustomerReviews', type: 'CustomerReviews' },
                { name: 'editorialReviews', realName: 'EditorialReviews', type: 'EditorialReviews' },
                { name: 'similarProducts', realName: 'SimilarProducts', type: 'SimilarProducts' },
                { name: 'accessories', realName: 'Accessories', type: 'Accessories' },
                { name: 'tracks', realName: 'Tracks', type: 'Tracks' },
                { name: 'browseNodes', realName: 'BrowseNodes', type: 'BrowseNodes' },
                { name: 'alternateVersions', realName: 'AlternateVersions', type: 'AlternateVersions' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Item133.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        Item133.prototype.getASIN = function () {
            return this.aSIN;
        };
    
        /**
         * Setter for ASIN
         * 
         * @param {string} value 
         */
        Item133.prototype.setASIN = function (value) {
            this.aSIN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        Item133.prototype.getParentASIN = function () {
            return this.parentASIN;
        };
    
        /**
         * Setter for ParentASIN
         * 
         * @param {string|null} value 
         */
        Item133.prototype.setParentASIN = function (value) {
            this.parentASIN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Errors|null}
         */
        Item133.prototype.getErrors = function () {
            return this.errors;
        };
    
        /**
         * Setter for Errors
         * 
         * @param {Errors|null} value 
         */
        Item133.prototype.setErrors = function (value) {
            this.errors = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        Item133.prototype.getDetailPageURL = function () {
            return this.detailPageURL;
        };
    
        /**
         * Setter for DetailPageURL
         * 
         * @param {string|null} value 
         */
        Item133.prototype.setDetailPageURL = function (value) {
            this.detailPageURL = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {ItemLinks|null}
         */
        Item133.prototype.getItemLinks = function () {
            return this.itemLinks;
        };
    
        /**
         * Setter for ItemLinks
         * 
         * @param {ItemLinks|null} value 
         */
        Item133.prototype.setItemLinks = function (value) {
            this.itemLinks = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        Item133.prototype.getSalesRank = function () {
            return this.salesRank;
        };
    
        /**
         * Setter for SalesRank
         * 
         * @param {string|null} value 
         */
        Item133.prototype.setSalesRank = function (value) {
            this.salesRank = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Image|null}
         */
        Item133.prototype.getSmallImage = function () {
            return this.smallImage;
        };
    
        /**
         * Setter for SmallImage
         * 
         * @param {Image|null} value 
         */
        Item133.prototype.setSmallImage = function (value) {
            this.smallImage = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Image|null}
         */
        Item133.prototype.getMediumImage = function () {
            return this.mediumImage;
        };
    
        /**
         * Setter for MediumImage
         * 
         * @param {Image|null} value 
         */
        Item133.prototype.setMediumImage = function (value) {
            this.mediumImage = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Image|null}
         */
        Item133.prototype.getLargeImage = function () {
            return this.largeImage;
        };
    
        /**
         * Setter for LargeImage
         * 
         * @param {Image|null} value 
         */
        Item133.prototype.setLargeImage = function (value) {
            this.largeImage = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        Item133.prototype.getImageSets = function () {
            return this.imageSets;
        };
    
        /**
         * Setter for ImageSets
         * 
         * @param {array|null} value 
         */
        Item133.prototype.setImageSets = function (value) {
            this.imageSets = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {ItemAttributes|null}
         */
        Item133.prototype.getItemAttributes = function () {
            return this.itemAttributes;
        };
    
        /**
         * Setter for ItemAttributes
         * 
         * @param {ItemAttributes|null} value 
         */
        Item133.prototype.setItemAttributes = function (value) {
            this.itemAttributes = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {VariationAttributes|null}
         */
        Item133.prototype.getVariationAttributes = function () {
            return this.variationAttributes;
        };
    
        /**
         * Setter for VariationAttributes
         * 
         * @param {VariationAttributes|null} value 
         */
        Item133.prototype.setVariationAttributes = function (value) {
            this.variationAttributes = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        Item133.prototype.getRelatedItems = function () {
            return this.relatedItems;
        };
    
        /**
         * Setter for RelatedItems
         * 
         * @param {array|null} value 
         */
        Item133.prototype.setRelatedItems = function (value) {
            this.relatedItems = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Collections|null}
         */
        Item133.prototype.getCollections = function () {
            return this.collections;
        };
    
        /**
         * Setter for Collections
         * 
         * @param {Collections|null} value 
         */
        Item133.prototype.setCollections = function (value) {
            this.collections = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Subjects|null}
         */
        Item133.prototype.getSubjects = function () {
            return this.subjects;
        };
    
        /**
         * Setter for Subjects
         * 
         * @param {Subjects|null} value 
         */
        Item133.prototype.setSubjects = function (value) {
            this.subjects = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {OfferSummary|null}
         */
        Item133.prototype.getOfferSummary = function () {
            return this.offerSummary;
        };
    
        /**
         * Setter for OfferSummary
         * 
         * @param {OfferSummary|null} value 
         */
        Item133.prototype.setOfferSummary = function (value) {
            this.offerSummary = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Offers|null}
         */
        Item133.prototype.getOffers = function () {
            return this.offers;
        };
    
        /**
         * Setter for Offers
         * 
         * @param {Offers|null} value 
         */
        Item133.prototype.setOffers = function (value) {
            this.offers = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {RentalOffers|null}
         */
        Item133.prototype.getRentalOffers = function () {
            return this.rentalOffers;
        };
    
        /**
         * Setter for RentalOffers
         * 
         * @param {RentalOffers|null} value 
         */
        Item133.prototype.setRentalOffers = function (value) {
            this.rentalOffers = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {VariationSummary|null}
         */
        Item133.prototype.getVariationSummary = function () {
            return this.variationSummary;
        };
    
        /**
         * Setter for VariationSummary
         * 
         * @param {VariationSummary|null} value 
         */
        Item133.prototype.setVariationSummary = function (value) {
            this.variationSummary = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Variations|null}
         */
        Item133.prototype.getVariations = function () {
            return this.variations;
        };
    
        /**
         * Setter for Variations
         * 
         * @param {Variations|null} value 
         */
        Item133.prototype.setVariations = function (value) {
            this.variations = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CustomerReviews|null}
         */
        Item133.prototype.getCustomerReviews = function () {
            return this.customerReviews;
        };
    
        /**
         * Setter for CustomerReviews
         * 
         * @param {CustomerReviews|null} value 
         */
        Item133.prototype.setCustomerReviews = function (value) {
            this.customerReviews = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {EditorialReviews|null}
         */
        Item133.prototype.getEditorialReviews = function () {
            return this.editorialReviews;
        };
    
        /**
         * Setter for EditorialReviews
         * 
         * @param {EditorialReviews|null} value 
         */
        Item133.prototype.setEditorialReviews = function (value) {
            this.editorialReviews = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {SimilarProducts|null}
         */
        Item133.prototype.getSimilarProducts = function () {
            return this.similarProducts;
        };
    
        /**
         * Setter for SimilarProducts
         * 
         * @param {SimilarProducts|null} value 
         */
        Item133.prototype.setSimilarProducts = function (value) {
            this.similarProducts = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Accessories|null}
         */
        Item133.prototype.getAccessories = function () {
            return this.accessories;
        };
    
        /**
         * Setter for Accessories
         * 
         * @param {Accessories|null} value 
         */
        Item133.prototype.setAccessories = function (value) {
            this.accessories = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Tracks|null}
         */
        Item133.prototype.getTracks = function () {
            return this.tracks;
        };
    
        /**
         * Setter for Tracks
         * 
         * @param {Tracks|null} value 
         */
        Item133.prototype.setTracks = function (value) {
            this.tracks = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {BrowseNodes|null}
         */
        Item133.prototype.getBrowseNodes = function () {
            return this.browseNodes;
        };
    
        /**
         * Setter for BrowseNodes
         * 
         * @param {BrowseNodes|null} value 
         */
        Item133.prototype.setBrowseNodes = function (value) {
            this.browseNodes = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {AlternateVersions|null}
         */
        Item133.prototype.getAlternateVersions = function () {
            return this.alternateVersions;
        };
    
        /**
         * Setter for AlternateVersions
         * 
         * @param {AlternateVersions|null} value 
         */
        Item133.prototype.setAlternateVersions = function (value) {
            this.alternateVersions = value;
        };
    
        return Item133;
    }

}(angular));
